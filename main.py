import telebot
from telebot import types
import os
import time

from wrapper.log import log_command
from database.database import create_users_table, add_user, get_all_users
from config.config import *

os.chdir(path_file) 
bot = telebot.TeleBot(token)

@bot.message_handler(commands=['start']) 
@log_command
def start_message(message):
    add_user(message.from_user.id)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_group = types.KeyboardButton("–°–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø—ã")
    markup.add(btn_group)

    bot.send_message(
        message.chat.id,  
        "üìå –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –¥–æ—Ä–æ–≥–∏–µ —Å—Ç—É–¥–µ–Ω—Ç—ã –≥—Ä—É–ø–ø—ã –≠–§–ë–û-07-23! –Ø –±–æ—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π —á—Ç–æ–±—ã –æ–±–ª–µ–≥—á–∏—Ç—å –≤–∞—à–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –∏ —É—á–µ–±—É. –í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:",
        reply_markup=markup
    )

@bot.message_handler(commands=['group'])
@log_command
def send_docx_message(message):
    user_id = message.from_user.id
    doc_path = "resources/group_list.docx"
    with open(doc_path, 'rb') as doc:
        bot.send_document(message.chat.id, doc, caption="üòÅ –í–æ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ–π –≥—Ä—É–ø–ø—ã:")
    pass

@bot.message_handler(func=lambda message: message.text == "–°–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø—ã")
def handle_group_button(message):
    sent_message = bot.send_message(message.chat.id, "–í—ã–∑—ã–≤–∞—é –∫–æ–º–∞–Ω–¥—É /group...")
    time.sleep(1)
    bot.delete_message(message.chat.id, sent_message.message_id)
    send_docx_message(message)

@bot.message_handler(commands=['send'])
def send_to_all(message):
    if message.from_user.id == admin:
        text_to_send = message.text.replace('/send ', '', 1)
        user_ids = get_all_users()
        for user_id in user_ids:
            try:
                bot.send_message(user_id, f"‚úèÔ∏è [–û–±—ä—è–≤–ª–µ–Ω–∏–µ] {text_to_send}")
            except Exception as e:
                print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
    else:
        bot.reply_to(message, "‚õîÔ∏è –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥–∞–º")


print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ. –û–∂–∏–¥–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥...")
create_users_table()
bot.polling()